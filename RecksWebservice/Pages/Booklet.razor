@using System.Collections.Generic;
@using Microsoft.AspNetCore;
@using System.Diagnostics;
@using RecksWebservice.Data;
@using RecksWebservice.Types;
@inject ClassDataHandler classDataHandler
@page "/booklet"
<link href="/css/booklet.css" rel="stylesheet" /> <!--Referencing CSS File For Booklet-->

<PageTitle>LSU Booklet</PageTitle>
<style>
    h1 {
        font-family: Cambria;
        font-weight: bold;
        color: #461D7C;
    }

    select {
        font-family: Cambria;
        background-color: #461D7C;
		color: white;
    }
</style>
<body>
	
	<div class="container-fluid">
		<div class="row">
			<div id="header-text" class="col-md-12">
				<h1 class="text-center">
					LSU BOOKLET AND CLASS SCHEDULER
				</h1>
			</div>
		</div>
		<div id="booklet-info" class="row">
			<div id="semesters" class="col-md-6">
				<select name="semester" id="semester" @onchange="SelectSemester">
					<option disabled selected>Semester</option>
					@foreach (var semester in semesterList)
					{
						string semesterName = semester.ToString(); //Prevents calling .ToString() more than once.
						<option value="@semesterName">@semesterName</option>
					}
				</select>
			</div>
			<div id="departments" class="col-md-6">
				<select name="department" id="department" @onchange="SelectDepartment">
					<option disabled selected>Department</option>
					@foreach (var department in departmentList)
					{
						string departmentName = department.ToString(); //Prevents calling .ToString() more than once.
						<option value="@departmentName">@departmentName</option>
					}
				</select>
				
			</div>
			<!--<div class="col-md-4">
			</div>-->
		</div>
		<div class="row">
			<div id="class-data" class="col-md-6">
				<select name="classes" id="classes" @bind="@_selectedClass">
					<option disabled selected>Class</option>
					@foreach (var visibleClass in classList)
					{
						string days = "";
						foreach (var day in visibleClass.GetDays())
						{
							days += " " + day.ToString().Substring(0,3);
						}
						string name = string.Format("Available Slots: {0} | {1} {2} | {3} {4} | {5} {6} | {7} {8}",
						visibleClass.GetAvailableSlots(),
						visibleClass.GetClassName(),
						visibleClass.GetClassID(),
						days,
						visibleClass.GetHoursAsString(),
						visibleClass.GetCredits(),
						visibleClass.GetCourseBuilding(),
						visibleClass.GetRoomNumber(),
						visibleClass.GetProfessor().GetName());
					<option value="@name">@name</option>
					}
				</select>
			</div>

			<h5 style="font-style:italic;font-size:small;">Selected Class: @_selectedClass</h5>

			<ClassScheduler>

			</ClassScheduler>
		</div>
	</div>

</body>

@code {
	private List<string> semesterList = new();
	private List<string> departmentList = new();
	private List<Class> classList = new();
	private List<Class> userPickedClasses = new();

	private string _selectedSemester = "";
	private string _selectedDepartment = "";
	private string _selectedClass = ""; //May need changing.

	#region Select and Fill Methods
	/// <summary>
	/// Checking and Handling if Department has been selected.
	/// </summary>
	/// <param name="e"></param>
	private async void SelectSemester(ChangeEventArgs e)
	{
		object? selectorValue = e.Value!;
		string? value = selectorValue.ToString()!;
		_selectedSemester = value;
		if (!string.IsNullOrWhiteSpace(_selectedDepartment))
		{
			await FillClasses();
		}
	}
	/// <summary>
	/// Checking and Handling if Semester has been selected.
	/// </summary>
	/// <param name="e"></param>
	private async void SelectDepartment(ChangeEventArgs e)
	{
		object? selectorValue = e.Value!;
		string? value = selectorValue.ToString()!;
		_selectedDepartment = value;
		if (!string.IsNullOrWhiteSpace(_selectedSemester))
		{
			await FillClasses();
		}
	}

	private async Task FillClasses()
	{
		await Task.Run(() => classDataHandler.GetClassData(_selectedSemester, _selectedDepartment));
		classList.Clear();
		classList = classDataHandler.GetClasses();
		StateHasChanged();
	}
	#endregion

	protected override async Task OnInitializedAsync()
	{
		await Task.Run(() => classDataHandler.GetBookletData());
		
		semesterList = classDataHandler.GetSemesters();
		departmentList = classDataHandler.GetDepartments();

	}

	//After code block execution, semester & department lists should automatically fill themselves out accordingly.
} 
