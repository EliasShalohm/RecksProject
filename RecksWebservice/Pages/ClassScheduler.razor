@page "/ClassData"
@using System
@using Microsoft.AspNetCore
@using RecksWebservice.Data
@using System.Diagnostics;
@using RecksWebservice.Types;
@using System.Collections.Generic
@using Syncfusion.Blazor.Schedule
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Data
@using Data

<h3>Class Scheduler</h3>

<div class="col-lg-12 control-section">
    <SfSchedule TValue="AppointmentData" Width="80%" Height="1000px" @bind-SelectedDate="@CurrentDate" @bind-CurrentView="@CurrentView" StartHour="6:00" EndHour="24:00">
        <ScheduleEvents TValue="AppointmentData" EventRendered="OnEventRendered"></ScheduleEvents>
        <ScheduleEventSettings DataSource="@dataSource"></ScheduleEventSettings>
        <ScheduleViews>
            <ScheduleView Option="View.Day"></ScheduleView>
            <ScheduleView Option="View.Week"></ScheduleView>
            <ScheduleView Option="View.WorkWeek"></ScheduleView>
            <ScheduleView Option="View.Month"></ScheduleView>
            <ScheduleView Option="View.Agenda"></ScheduleView>
        </ScheduleViews>
    </SfSchedule>
</div>

@code {
    public View CurrentView { get; set; } = View.Week;
    private DateTime CurrentDate { get; set; }
    private List<AppointmentData> dataSource = new List<AppointmentData>();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        CurrentDate = DateTime.Today;
    }
    public void OnEventRendered(EventRenderedArgs<AppointmentData> args)
    {
        Dictionary<string, object> attributes = new Dictionary<string, object>();
        if (CurrentView == View.Agenda)
        {
            attributes.Add("style", "border-left-color: " + args.Data.CategoryColor);
        }
        else
        {
            attributes.Add("style", "background: " + args.Data.CategoryColor);
        }
        args.Attributes = attributes;
    }


    public class AppointmentData
    {
        public int Id { get; set; }
        public string Subject { get; set; }
        public string Location { get; set; }
        public string Description { get; set; }
        public DateTime StartTime { get; set; }
        public DateTime EndTime { get; set; }
        public Nullable<bool> IsAllDay { get; set; }
        public string CategoryColor { get; set; }
        public string RecurrenceRule { get; set; }
        public Nullable<int> RecurrenceID { get; set; }
        public string RecurrenceException { get; set; }
        public string StartTimezone { get; set; }
        public string EndTimezone { get; set; }
    }
    public class ClassSchedule
    {
        public string CourseName { get; set; }
        public string Time { get; set; }
        public string Location { get; set; }
        public Professor Professor { get; set; }
        public int Rating { get; set; }

        public ClassSchedule(string courseName, string time, string location, Professor professor, int rating)
        {
            CourseName = courseName;
            Time = time;
            Location = location;
            Professor = professor;
            Rating = rating;
        }
    }
}
   